{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "75e0f5dd-323d-43b2-b5a5-d30b87d2eaef",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f05e9887-9752-494f-b4a4-276cd11bf650",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "add_arrays_loop()\n",
      "\n",
      "a[i] + b[i] = 1 + 5 = 6\n",
      "a[i] + b[i] = 2 + 6 = 8\n",
      "a[i] + b[i] = 3 + 7 = 10\n",
      "a[i] + b[i] = 4 + 8 = 12\n",
      "\n",
      "\n",
      "add_arrays_vectorized function()\n",
      "\n",
      "a + b = [1 2 3 4] + [5 6 7 8] = [ 6  8 10 12]\n"
     ]
    }
   ],
   "source": [
    "# # Non-vectorized approach (slow)\n",
    "def add_arrays_loop(a, b):\n",
    "    print('add_arrays_loop()\\n')\n",
    "    result = np.empty_like(a)\n",
    "    for i in range(len(a)):\n",
    "        result[i] = a[i] + b[i]\n",
    "        print(f'a[i] + b[i] = {a[i]} + {b[i]} = {result[i]}')\n",
    "    return result\n",
    "\n",
    "# Vectorized approach (fast)\n",
    "def add_arrays_vectorized(a, b):\n",
    "    print('\\n\\nadd_arrays_vectorized function()\\n')\n",
    "    print(f'a + b = {a} + {b} = {a + b}')\n",
    "    return a + b\n",
    "\n",
    "# Usage\n",
    "a = np.array([1, 2, 3, 4])\n",
    "b = np.array([5, 6, 7, 8])\n",
    "\n",
    "result_non_vectorized = add_arrays_loop(a, b)\n",
    "result_vectorized = add_arrays_vectorized(a, b)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f95f924b-b39e-4677-9407-330d3fb3ef84",
   "metadata": {},
   "source": [
    "<h2>Broadcasting in NumPy</h2>\n",
    "<p>a powerful mechanism that allows NumPy to work with arrays of different shapes when performing arithmetic operations. It automatically expands smaller arrays to match the shape of larger arrays without making copies of the data. This enables efficient operations between arrays of different sizes.</p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aa3c1a60-a0a4-4bf8-acdf-bf2e2ee55359",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = np.array([1, 2, 3, 4])\n",
    "b = np.array([10])\n",
    "c = a + b  # b is broadcast to match a's shape\n",
    "# c becomes [11, 12, 13, 14]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
